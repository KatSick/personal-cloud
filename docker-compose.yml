version: "3"

volumes:
  traefik-letsencrypt:
  factorio_data:
  vrising_data:
  filebrowser_data:
  blog_data:

services:
  # https://github.com/filebrowser/filebrowser
  filebrowser:
    container_name: filebrowser
    image: hurlenko/filebrowser:v2.23.0
    volumes:
      - /:/data
      - vrising_data:/data/vrising
      - factorio_data:/data/factorio
      - blog_data:/data/blog
      - filebrowser_data:/config
    environment:
      - FB_BASEURL=/
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.filebrowser.rule=Host(`files.${DOMAIN_NAME}`)
      - traefik.http.routers.filebrowser.middlewares=auth
      - traefik.http.routers.filebrowser.tls.certresolver=letsencrypt
      - traefik.http.routers.filebrowser.entrypoints=websecure
      - traefik.http.services.filebrowser.loadbalancer.server.port=8080
      - traefik.http.middlewares.auth.basicauth.usersfile=.htpasswd

  # https://github.com/OpenFactorioServerManager/factorio-server-manager/wiki/Installation-and-Usage
  factorio:
    image: ofsm/ofsm:latest
    container_name: factorio
    environment:
      - FACTORIO_VERSION=stable
    volumes:
      - factorio_data:/opt/fsm-data
    labels:
      - traefik.enable=true
      - traefik.http.routers.fsm.rule=Host(`factorio.${DOMAIN_NAME}`)
      - traefik.http.routers.fsm.tls.certresolver=letsencrypt
      - traefik.http.routers.fsm.entrypoints=websecure
      - traefik.http.services.fsm.loadbalancer.server.port=80
      - traefik.udp.routers.fsm.entrypoints=factorio
      - traefik.udp.services.fsm.loadbalancer.server.port=34197

  # https://github.com/TrueOsiris/docker-vrising
  # server not starting...
  # vrising:
  #   container_name: vrising
  #   image: trueosiris/vrising
  #   network_mode: bridge
  #   environment:
  #     - TZ=Europe/Paris
  #     - SERVERNAME=vrisingDocker
  #   volumes:
  #     - vrising_data:/mnt/vrising/server
  #     - vrising_data:/mnt/vrising/persistentdata
  #   labels:
  #     - traefik.enable=true
  #     - traefik.http.routers.vrising.rule=Host(`vrising.${DOMAIN_NAME}`)
  #     - traefik.http.routers.vrising.tls.certresolver=letsencrypt
  #     - traefik.http.routers.vrising.entrypoints=websecure
  #     - traefik.http.services.vrising.loadbalancer.server.port=80
  #     - traefik.udp.routers.vrising.entrypoints=vrising1,vrising2
  #     - traefik.udp.services.vrising.loadbalancer.server.port=9877
  #     - traefik.udp.services.vrising.loadbalancer.server.port=9876

  # https://github.com/traefik/traefik
  traefik:
    build:
      context: .
      dockerfile: Dockerfile.traefik
    container_name: traefik
    command:
      - --api=true
      - --api.dashboard=true

      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --entrypoints.blog-upload.address=:873
      - --entrypoints.factorio.address=:34197/udp
      # - --entrypoints.vrising1.address=:9877/udp
      # - --entrypoints.vrising2.address=:9876/udp

      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https

      - --providers.docker
      - --providers.docker.exposedByDefault=false
      - --certificatesresolvers.letsencrypt.acme.tlschallenge=true
      - --certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL}
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
    restart: unless-stopped
    ports:
      - 80:80
      - 873:873
      - 443:443
      - 34197:34197/udp # factorio game port
      # - 9877:9877/udp # vrising1 game port
      # - 9876:9876/udp # vrising2 game port
    volumes:
      - traefik-letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik.rule=Host(`traefik.${DOMAIN_NAME}`)
      - traefik.http.routers.traefik.service=api@internal
      - traefik.http.routers.traefik.middlewares=auth
      - traefik.http.routers.traefik.tls.certresolver=letsencrypt
      - traefik.http.routers.traefik.entrypoints=websecure
      - traefik.http.middlewares.auth.basicauth.usersfile=.htpasswd

  # https://github.com/amir20/dozzle
  dozzle:
    container_name: dozzle
    image: amir20/dozzle:v4.10.11
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - traefik.enable=true
      - traefik.http.routers.dozzle.rule=Host(`dozzle.${DOMAIN_NAME}`)
      - traefik.http.routers.dozzle.middlewares=auth
      - traefik.http.routers.dozzle.tls.certresolver=letsencrypt
      - traefik.http.routers.dozzle.entrypoints=websecure
      - traefik.http.middlewares.auth.basicauth.usersfile=.htpasswd

  # https://hub.docker.com/_/nginx
  blog:
    container_name: nginx
    restart: unless-stopped
    image: nginx:1.25.0-alpine3.17
    volumes:
      - blog_data:/usr/share/nginx/html:ro
    labels:
      - traefik.enable=true
      - traefik.http.routers.blog.rule=Host(`blog.${DOMAIN_NAME}`)
      - traefik.http.routers.blog.tls.certresolver=letsencrypt
      - traefik.http.routers.blog.entrypoints=websecure

  # https://hub.docker.com/r/axiom/rsync-server
  blog-upload:
    image: axiom/rsync-server
    container_name: blog-upload
    restart: unless-stopped
    volumes:
      - blog_data:/data
    environment:
      - USERNAME=${SSH_USERNAME}
      - PASSWORD=${SSH_PASSWORD}
    labels:
      - traefik.enable=true
      - traefik.http.routers.blog-upload.rule=Host(`blog-upload.${DOMAIN_NAME}`)
      - traefik.http.routers.blog-upload.tls.certresolver=letsencrypt
      - traefik.http.routers.blog-upload.entrypoints=websecure
      - traefik.tcp.routers.blog-upload.entrypoints=blog-upload
      - traefik.tcp.routers.blog-upload.rule=HostSNI(`*`)
      - traefik.tcp.services.blog-upload.loadbalancer.server.port=873
